使用overlayFS存储驱动程序

# 基本信息
[root@zcheck-6 docker]# cat /etc/redhat-release 
CentOS Linux release 7.6.1810 (Core) 
[root@zcheck-6 docker]# uname -a
Linux zcheck-6 4.4.167-1.el7.elrepo.x86_64 #1 SMP Thu Dec 13 09:41:24 EST 2018 x86_64 x86_64 x86_64 GNU/Linux
[root@zcheck-6 docker]# docker info
Server Version: 18.09.0


# 两个先决条件
1、Linux内核在4.0及更高版本。或使用内核版本3.10.0-514或更高版本的RHEL或Centos
2、ftype=1

# 升级内核


创建XFS文件系统
# 验证ftype=1
[root@zcheck-6 docker]# xfs_info /dev/sdb1
meta-data=/dev/sdb1              isize=512    agcount=4, agsize=1310656 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=0 spinodes=0
data     =                       bsize=4096   blocks=5242624, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0 ftype=1
log      =internal               bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
[root@zcheck-6 docker]#

# 增加一块盘
mkfs.xfs -n ftype=1 /dev/sdb
fdisk /dev/sdb
(输入n，一路回车，最后输入w，# lsblk
sdb               8:16   0   20G  0 disk 
└─sdb1            8:17   0   20G  0 part /data
)
mount /dev/sdb1 /data/docker
vi /etc/fstab
/dev/sdb1 /data xfs defaults 0 0
# 增加docker配置文件内容
[root@zcheck-6 docker]# cat /etc/docker/daemon.json 
{
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ],
  "data-root": "/data/docker"
}
# 在修改daemon.json文件后，daemon-reload文件测试是可以不重启就生效的
# 测试配置：insecure-registries
# systemctl start docker
# docker info
Storage Driver: overlay2
 Backing Filesystem: xfs

 
 
# daemon.json
{
 "api-cors-header":"", 
 "authorization-plugins":[],
 "bip": "",
 "bridge":"",
 "cgroup-parent":"",
 "cluster-store":"",
 "cluster-store-opts":{},
 "cluster-advertise":"",
 "debug": true,                     #启用debug的模式，启用后，可以看到很多的启动信息。默认false
 "default-gateway":"",
 "default-gateway-v6":"",
 "default-runtime":"runc",
 "default-ulimits":{},
 "disable-legacy-registry":false,
 "dns": ["192.168.1.1"],             # 设定容器DNS的地址，在容器的 /etc/resolv.conf文件中可查看。
 "dns-opts": [],                     #  容器 /etc/resolv.conf 文件，其他设置
 "dns-search": [],               # 设定容器的搜索域，当设定搜索域为 .example.com 时，在搜索一个名为 host 的 主机时，DNS不仅搜索host，还会搜                             
                                  索host.example.com 。 注意：如果不设置， Docker 会默认用主机上的 /etc/resolv.conf 来配置容器。

"exec-opts": [],
 "exec-root":"",
 "fixed-cidr":"",
 "fixed-cidr-v6":"",
 "graph":"/var/lib/docker",              ＃已废弃，使用data-root代替,这个主要看docker的版本
 "data-root":"/var/lib/docker",          ＃Docker运行时使用的根路径,根路径下的内容稍后介绍，默认/var/lib/docker
 "group": "",                            #Unix套接字的属组,仅指/var/run/docker.sock
 "hosts": [],                           #设置容器hosts
 "icc": false,
 "insecure-registries": ["https://ower.site.com"],       #配置docker的私库地址
 "ip":"0.0.0.0",
 "iptables": false,
 "ipv6": false,
 "ip-forward": false,          #默认true, 启用 net.ipv4.ip_forward ,进入容器后使用 sysctl -a | grepnet.ipv4.ip_forward 查看

  "ip-masq":false,
 "labels":["nodeName=node-121"],   # docker主机的标签，很实用的功能,例如定义：–label nodeName=host-121

 "live-restore": true,
 "log-driver":"",
 "log-level":"",
 "log-opts": {},
 "max-concurrent-downloads":3,
 "max-concurrent-uploads":5,
 "mtu": 0,
 "oom-score-adjust":-500,
 "pidfile": "",                    #Docker守护进程的PID文件
 "raw-logs": false,
 "registry-mirrors":["https://d8b3zdiw.mirror.aliyuncs.com"],      #镜像加速的地址，增加后在 docker info中可查看。
 "runtimes": {
 "runc": {
 "path": "runc"
 },
 "custom": {
 "path":"/usr/local/bin/my-runc-replacement",
 "runtimeArgs": [
 "--debug"
 ]
 }
 },
 "selinux-enabled": false, #默认 false，启用selinux支持

 "storage-driver":"",
 "storage-opts": [],
 "swarm-default-advertise-addr":"",
 "tls": true,                      #默认 false, 启动TLS认证开关
 "tlscacert": "",                  #默认 ~/.docker/ca.pem，通过CA认证过的的certificate文件路径
 "tlscert": "",                    #默认 ~/.docker/cert.pem ，TLS的certificate文件路径
 "tlskey": "",                     #默认~/.docker/key.pem，TLS的key文件路径
 "tlsverify": true,                #默认false，使用TLS并做后台进程与客户端通讯的验证
 "userland-proxy":false,
 "userns-remap":""
 }
 
 
